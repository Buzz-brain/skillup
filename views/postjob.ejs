<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Post A Job</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Poppins", sans-serif;

    }

    body {
      background-color: #f9f9f9;
    }

    /* Header Section */
    header {
      background-color: white;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 2rem;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .logo {
      font-size: 1.5rem;
      font-weight: bold;
      color: #3cb371;
    }

    nav {
      display: flex;
      gap: 1.5rem;
    }

    nav a {
      text-decoration: none;
      color: #333;
      font-weight: 500;
    }

    .auth-buttons {
      display: flex;
      gap: 1rem;
    }

    .auth-buttons button {
      padding: 0.5rem 1rem;
      border: 2px solid #3cb371;
      border-radius: 5px;
      font-size: 0.9rem;
      cursor: pointer;
    }

    .auth-buttons .logout {
      background-color: transparent;
      color: #3cb371;
    }

    .auth-buttons .welcome {
      background-color: #3cb371;
      color: white;
    }


    .container {
      max-width: 500px;
      margin: 50px auto;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      padding: 30px;
    }

    h1 {
      font-size: 24px;
      color: #333;
      text-align: center;
    }

    .subtitle {
      color: #666;
      margin-bottom: 20px;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    .form-group {
      display: flex;
      flex-direction: column;
    }

    label {
      font-weight: bold;
      margin-bottom: 5px;
      color: #333;
    }

    input,
    select,
    textarea {
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 14px;
    }

    textarea {
      resize: none;
    }

    input:focus,
    select:focus,
    textarea:focus {
      outline: none;
      border-color: #28a745;
    }

    .submit-btn {
      background-color: #28a745;
      color: white;
      padding: 10px;
      font-size: 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .submit-btn:hover {
      background-color: #218838;
    }

    input[type="file"] {
      border: none;
      background: #f0f0f0;
      padding: 10px;
      cursor: pointer;
    }
  </style>
</head>

<body>
  <header>
    <img src="logo.png" alt="">

    <div class="auth-buttons">
      <a href="/client-register"><button class="welcome">Welcome, name ðŸ‘‹</button></a>
      <a href="/client-login"><button class="logout">Logout</button></a>
    </div>
  </header>

  <div class="container">
    <h1 style="margin-bottom: 10px;">Post A Job ðŸ› </h1>
    <p class="subtitle">
      You are one step away from connecting with top-skilled artisans for your needs. Make that move today!
    </p>
    <form id="postJobForm">
      <div class="form-group">
        <label for="artisan">Choose an Artisan</label>
        <select id="artisan" name="artisan">
          <option value="" disabled selected>Select</option>
          <option value="plumber">Plumber</option>
          <option value="electrician">Electrician</option>
          <option value="carpenter">Carpenter</option>
          <option value="painter">Painter</option>
          <option value="cleaner">Cleaner</option>
          <option value="welder">Welder</option>
          <option value="beautyspecialist">Beauty Specialist</option>
          <option value="barber">Barber</option>
          <option value="roofer">Roofer</option>
          <option value="tiler">Tiler</option>
          <option value="mason">Mason (Bricklayer)</option>
          <option value="flooringinstaller">Flooring Installer</option>
          <option value="landscaper">Landscaper</option>
        </select>
      </div>
      <div class="form-group">
        <label for="service">Nature of Service</label>
        <select id="service" name="service">
          <option value="" disabled selected>Select</option>
          <option value="repair">Repair</option>
          <option value="installation">Installation</option>
          <option value="maintenance">Maintenance</option>
        </select>
      </div>
      <div class="form-group">
        <label for="description">Job Description</label>
        <textarea id="description" name="description" rows="4"
          placeholder="Describe the role, responsibilities, and requirements..."></textarea>
      </div>
      <div class="form-group">
        <label for="address">Service Address</label>
        <input type="text" id="address" name="address" placeholder="Enter Address">
      </div>
      <div class="form-group">
        <label for="timeline">Timeline</label>
        <input type="date" id="timeline" name="timeline">
      </div>
      <div class="form-group">
        <label for="duration">Duration</label>
        <select id="duration" name="duration">
          <option value="" disabled selected>Select</option>
          <option value="1-day">1 Day</option>
          <option value="2-days">2 Days</option>
          <option value="1-week">1 Week</option>
          <option value="1-month">1 Month</option>
        </select>
      </div>
      <div class="form-group">
        <label for="budget">Budget</label>
        <select id="budget" name="budget">
          <option value="" disabled selected>Select</option>
          <option value="low">Less than #10,000</option>
          <option value="medium">#10,000 - #50,000</option>
          <option value="high">More than #50,000</option>
        </select>
      </div>
      <div class="form-group">
        <label for="image">Job Image</label>
        <input type="file" id="image" name="image" style="padding: 30px 120px; color: blue;">
      </div>

      <div class="form-group">
        <label for="fullName">Full Name</label>
        <input type="text" id="fullName" name="fullName" placeholder="Enter Full Name">
      </div>
      <div class="form-group">
        <label for="phoneNumber">Phone Number</label>
        <input type="tel" id="phoneNumber" name="phoneNumber" placeholder="Enter Phone Number">
      </div>
      <button type="submit" class="submit-btn">Submit</button>
    </form>
  </div>
  <script>
    const form = document.getElementById('postJobForm');
    const token = localStorage.getItem('token'); // Assuming the token is stored in local storage
    const uploadPreset = 'upload_preset'; // Replace with your upload preset
    const cloudName = 'df2q6gyuq'; // Replace with your cloud name


    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const artisan = document.getElementById('artisan').value;
      const service = document.getElementById('service').value;
      const description = document.getElementById('description').value;
      const address = document.getElementById('address').value;
      const duration = document.getElementById('duration').value;
      const budget = document.getElementById('budget').value;
      const fullName = document.getElementById('fullName').value;
      const phoneNumber = document.getElementById('phoneNumber').value;
      const image = document.getElementById('image').files[0];

      const formData = new FormData();
      formData.append('file', image);
      formData.append('upload_preset', uploadPreset);
      try {
        const response = await fetch(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, {
          method: 'POST',
          body: formData,
        });

        const data = await response.json();

        if (response.ok) {
          const imageUrl = data.secure_url;

          const jobData = {
            artisan,
            natureOfService: service,
            jobDescription: description,
            serviceAddress: address,
            duration,
            budget,
            fullName,
            phoneNumber,
            imageUrl,
          };

          try {
            const response = await fetch('/post-job', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`,
              },
              body: JSON.stringify(jobData),
            });

            const data = await response.json();

            if (response.ok) {
              alert(data.message);
            } else {
              console.error(data);
              alert(data.message);
            }
          } catch (error) {
            console.error(error);
            if (error.message) {
              alert(error.message);
            } else {
              alert('Error posting job');
            }
          }
        } else {
          console.error(data);
          alert(data.error.message);
        }
      } catch (error) {
        console.error(error);
        if (error.message) {
          alert(error.message);
        } else {
          alert('Error uploading image');
        }
      }
    });

  </script>
</body>

</html>