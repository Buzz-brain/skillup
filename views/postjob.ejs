<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Post A Job</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;display=swap" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
  <link href="https://ai-public.creatie.ai/gen_page/tailwind-custom.css" rel="stylesheet" />
  <script
    src="https://cdn.tailwindcss.com/3.4.5?plugins=forms@0.5.7,typography@0.5.13,aspect-ratio@0.4.2,container-queries@0.1.1"></script>
  <script src="https://ai-public.creatie.ai/gen_page/tailwind-config.min.js" data-color="#000000"
    data-border-radius="small"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Poppins", sans-serif;

    }




    .contain {
      max-width: 500px;
      margin: 50px auto;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      padding: 30px;
    }

    h1 {
      font-size: 24px;
      color: #333;
      text-align: center;
    }

    .subtitle {
      color: #666;
      margin-bottom: 20px;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    .form-group {
      display: flex;
      flex-direction: column;
    }

    label {
      font-weight: bold;
      margin-bottom: 5px;
      color: #333;
    }

    input,
    select,
    textarea {
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 14px;
    }

    textarea {
      resize: none;
    }

    input:focus,
    select:focus,
    textarea:focus {
      outline: none;
      border-color: #28a745;
    }

    .submit-btn {
      background-color: #28a745;
      color: white;
      padding: 10px;
      font-size: 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .submit-btn:hover {
      background-color: #218838;
    }

    input[type="file"] {
      border: none;
      background: #f0f0f0;
      padding: 10px;
      cursor: pointer;
    }
  </style>
</head>

<body class="bg-gray-50 min-h-screen">
  <nav class="bg-white shadow-sm">
    <div class="max-w-8xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <div class="flex items-center">
          <a href="/post" style="cursor: pointer;"><img src="/logo.png" alt="Logo" class="h-8 w-auto" /></a>
        </div>
        <div class="flex items-center space-x-8">
          <!-- <div class="relative">
                    <button class="p-2 text-gray-400 hover:text-gray-500">
                        <i class="far fa-bell text-xl"></i>
                        <span class="absolute top-1 right-1 h-2 w-2 bg-custom rounded-full"></span>
                    </button>
                </div> -->
          <div class="flex items-center space-x-3">
            <!-- <img src="" alt="Profile" class="h-8 w-8 rounded-full" /> -->
            <span id="welcome-message" class="text-sm font-medium text-gray-700"></span>

          </div>
          <button id="logout-btn"
            class="!rounded-button bg-white text-gray-700 border border-gray-300 px-4 py-2 text-sm font-medium hover:bg-gray-50">Logout</button>
        </div>
      </div>
    </div>
  </nav>
  <main class="max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="w-full">
      <div class="flex-1">
        <div class="flex justify-center items-center mb-6">
          <h1 class="text-2xl font-bold text-gray-900">Post A Job ðŸ› </h1>

        </div>
        <div class="mb-6 flex justify-end items-center">

          <a href="/dashboard"><button
              class="!rounded-button bg-green-600 text-white px-3 py-2.5 text-sm font-medium hover:bg-custom/90">
              &lt; Back</button></a>

        </div>


        <div class="contain">
          <p class="subtitle">
            You are one step away from connecting with top-skilled artisans for your needs. Make that move today!
          </p>
          <form id="postJobForm">
            <div class="form-group">
              <label for="artisan">Choose an Artisan</label>
              <select id="artisan" name="artisan">
                <option value="" disabled selected>Select</option>
                <option value="plumber">Plumber</option>
                <option value="electrician">Electrician</option>
                <option value="carpenter">Carpenter</option>
                <option value="painter">Painter</option>
                <option value="cleaner">Cleaner</option>
                <option value="welder">Welder</option>
                <option value="beautyspecialist">Beauty Specialist</option>
                <option value="barber">Barber</option>
                <option value="roofer">Roofer</option>
                <option value="tiler">Tiler</option>
                <option value="mason">Mason (Bricklayer)</option>
                <option value="flooringinstaller">Flooring Installer</option>
                <option value="landscaper">Landscaper</option>
              </select>
            </div>
            <div class="form-group">
              <label for="service">Nature of Service</label>
              <select id="service" name="service">
                <option value="" disabled selected>Select</option>
                <option value="repair">Repair</option>
                <option value="installation">Installation</option>
                <option value="maintenance">Maintenance</option>
              </select>
            </div>
            <div class="form-group">
              <label for="description">Job Description</label>
              <textarea id="description" name="description" rows="4"
                placeholder="Describe the role, responsibilities, and requirements..."></textarea>
            </div>
            <div class="form-group">
              <label for="address">Service Address</label>
              <input type="text" id="address" name="address" placeholder="Enter Address">
            </div>
            <div class="form-group">
              <label for="duration">Duration</label>
              <select id="duration" name="duration">
                <option value="" disabled selected>Select</option>
                <option value="1-day">1 Day</option>
                <option value="2-days">2 Days</option>
                <option value="1-week">1 Week</option>
                <option value="1-month">1 Month</option>
              </select>
            </div>
            <div class="form-group">
              <label for="budget">Budget</label>
              <select id="budget" name="budget">
                <option value="" disabled selected>Select</option>
                <option value="Less than #10,000">Less than #10,000</option>
                <option value="#10,000 - #50,000">#10,000 - #50,000</option>
                <option value="More than #50,000">More than #50,000</option>
              </select>
            </div>
            <div class="form-group">
              <label for="image">Job Image</label>
              <input type="file" id="image" name="image" style="padding: 30px 30px; color: blue;">
            </div>

            <div class="form-group">
              <label for="fullName">Full Name</label>
              <input type="text" id="fullName" name="fullName" placeholder="Enter Full Name">
            </div>
            <div class="form-group">
              <label for="phoneNumber">Phone Number</label>
              <input type="tel" id="phoneNumber" name="phoneNumber" placeholder="Enter Phone Number">
            </div>
            <button type="submit" class="submit-btn">Submit</button>
          </form>
        </div>

      </div>
    </div>
  </main>



  <script>
    const form = document.getElementById('postJobForm');
    const token = localStorage.getItem('token'); // Assuming the token is stored in local storage
    const uploadPreset = 'upload_preset'; // Replace with your upload preset
    const cloudName = 'df2q6gyuq'; // Replace with your cloud name

    if (!token) {
      window.location.replace('/client-login');
    }


    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const artisan = document.getElementById('artisan').value;
      const service = document.getElementById('service').value;
      const description = document.getElementById('description').value;
      const address = document.getElementById('address').value;
      const duration = document.getElementById('duration').value;
      const budget = document.getElementById('budget').value;
      const fullName = document.getElementById('fullName').value;
      const phoneNumber = document.getElementById('phoneNumber').value;
      const image = document.getElementById('image').files[0];

      const formData = new FormData();
      formData.append('file', image);
      formData.append('upload_preset', uploadPreset);
      try {
        const response = await fetch(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, {
          method: 'POST',
          body: formData,
        });

        const data = await response.json();

        if (response.ok) {
          const imageUrl = data.secure_url;

          const jobData = {
            artisan,
            natureOfService: service,
            jobDescription: description,
            serviceAddress: address,
            duration,
            budget,
            fullName,
            phoneNumber,
            imageUrl,
          };
          console.log(jobData)
          try {
            const response = await fetch('/post-job', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`,
              },
              body: JSON.stringify(jobData),
            });

            const data = await response.json();

            if (response.ok) {
              alert(data.message);
              window.location.replace('/dashboard')
            } else {
              console.error(data);
              alert(data.message);
            }
          } catch (error) {
            console.error(error);
            if (error.message) {
              alert(error.message);
            } else {
              alert('Error posting job');
            }
          }
        } else {
          console.error(data);
          alert(data.error.message);
        }
      } catch (error) {
        console.error(error);
        if (error.message) {
          alert(error.message);
        } else {
          alert('Error uploading image');
        }
      }
    });


    fetch('/user-details', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
      .then(response => {
        if (!response.ok) {
          window.location.replace('/client-login');
        }
        return response.json();
      })

      .then(data => {
        if (data.role !== 'client') {
    window.location.replace('/dashboard'); // or any other page you want to redirect to
  }

        const welcomeMessageElement = document.getElementById('welcome-message');
        welcomeMessageElement.textContent = `Welcome,  ${data.lastName} ðŸ‘‹`;
      })
      .catch(error => console.error('Error fetching user details:', error));

    const logoutBtn = document.getElementById('logout-btn');

    logoutBtn.addEventListener('click', () => {
      localStorage.removeItem('token');
      window.location.replace('/client-login');
    });
  </script>
</body>

</html>